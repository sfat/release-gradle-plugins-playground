---
# starting from the "simple" preset gives us:
# - the Conventional Commits convention
# - the "mainline" and "internal" release types (that we override here)
preset: "simple"
releaseAssets:
  release-gradle-plugins-playground-{{version}}.jar:
    fileName: "release-gradle-plugins-playground-{{version}}.jar"
    description: "release-gradle-plugins-playground-{{version}}.jar"
    type: "application/octet-stream"
    path: "build/libs/release-gradle-plugins-playground-{{version}}.jar"
changelog:
  path: "build/CHANGELOG.md"
  template: "config/CHANGELOG.tpl"
  sections:
    "Added": "^feat$"
    "Fixed": "^fix$"
    "Changed": "^chore$"
  substitutions:
    "(?m)XYZ-([0-9]+)(?s)": "[XYZ-%s](https://example.jira.com/browse/XYZ-%s)"
releaseTypes:
  enabled:
    - mainline
    - maturity
    - integration
    - fix
    - hotfix
    - feature
    - release
    - maintenance
    - internal
  publicationServices:
    - github
  items:
    # "mainline" overrides the release type with the same name from the preset
    mainline:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(master|main)$"
      matchEnvironmentVariables:
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "true"
    maturity:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)(\\.([0-9]\\d*))?)?$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(alpha|beta|gamma|delta|epsilon|zeta|eta|theta|iota|kappa|lambda|mu|nu|xi|omicron|pi|rho|sigma|tau|upsilon|phi|chi|psi|omega)$"
      matchEnvironmentVariables:
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "true"
    integration:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(develop|development|integration|latest)(\\.([0-9]\\d*))?)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(develop|development|integration|latest)$"
      matchEnvironmentVariables:
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "true"
    feature:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(feat|feature)(([0-9a-zA-Z]*)(\\.([0-9]\\d*))?)?)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(feat|feature)((-|\\/)[0-9a-zA-Z-_]+)?$"
      matchEnvironmentVariables:
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "false"
    fix:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-fix(([0-9a-zA-Z]*)(\\.([0-9]\\d*))?)?)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^fix((-|\\/)[0-9a-zA-Z-_]+)?$"
      matchEnvironmentVariables:
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "false"
    hotfix:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-hotfix(([0-9a-zA-Z]*)(\\.([0-9]\\d*))?)?)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^hotfix((-|\\/)[0-9a-zA-Z-_]+)?$"
      matchEnvironmentVariables:
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "true"
    release:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "{{#firstLower}}{{branch}}{{/firstLower}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)(-(rel|release)((\\.([0-9]\\d*))?)?)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^(rel|release)(-|\\/)({{configuration.releasePrefix}})?([0-9|x]\\d*)(\\.([0-9|x]\\d*)(\\.([0-9|x]\\d*))?)?$"
      matchEnvironmentVariables:
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "false"
      versionRangeFromBranchName: true
    maintenance:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      filterTags: "^({{configuration.releasePrefix}})?([0-9]\\d*)\\.([0-9]\\d*)\\.([0-9]\\d*)$"
      gitPush: "true"
      gitTag: "true"
      matchBranches: "^[a-zA-Z]*([0-9|x]\\d*)(\\.([0-9|x]\\d*)(\\.([0-9|x]\\d*))?)?$"
      matchEnvironmentVariables:
        CI: "^true$"                 # only match this release type when running on CI servers
      matchWorkspaceStatus: "CLEAN"  # only match this release type when the repository is clean
      publish: "true"
      versionRangeFromBranchName: true
    # "internal" overrides the release type with the same name from the preset adding some qualifiers and is the global fallback for all release types
    internal:
      description: "{{#fileContent}}build/CHANGELOG.md{{/fileContent}}"
      collapseVersions: true
      collapsedVersionQualifier: "internal"
      gitPush: "false"
      gitTag: "false"
      identifiers:
        -
          qualifier: "{{#sanitizeLower}}{{branch}}{{/sanitizeLower}}"
          position: "BUILD"
        -
          qualifier: "{{#short5}}{{releaseScope.finalCommit}}{{/short5}}"
          position: "BUILD"
        -
          qualifier: "{{#timestampYYYYMMDDHHMMSS}}{{timestamp}}{{/timestampYYYYMMDDHHMMSS}}"
          position: "BUILD"
      publish: "false"
services:
  github:
    type: "GITHUB"
    options:
      AUTHENTICATION_TOKEN: "{{#environmentVariable}}GH_TOKEN{{/environmentVariable}}"
      REPOSITORY_NAME: "release-gradle-plugins-playground"
      REPOSITORY_OWNER: "sfat"
resume: true
verbosity: "INFO"
stateFile: "build/.nyx-state.json"